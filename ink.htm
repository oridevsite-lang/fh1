<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>链接解析与跳转</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f2f5;
        }
        .container {
            text-align: center;
            padding: 2rem;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        #status {
            font-size: 1.2rem;
            margin: 1.5rem 0;
            color: #333;
        }
        #decodedUrl {
            color: #1a73e8;
            word-break: break-all;
            margin: 1rem 0;
            padding: 0.5rem;
            border: 1px solid #eee;
            border-radius: 4px;
        }
        button {
            padding: 0.8rem 1.5rem;
            background-color: #1a73e8;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            margin-top: 1rem;
        }
        button:hover {
            background-color: #1557b0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>链接处理中...</h1>
        <div id="status">正在解析参数...</div>
        <div id="decodedUrl"></div>
        <button id="jumpBtn" style="display: none;" onclick="manualJump()">手动跳转</button>
    </div>

    <script>
        // 从URL中提取c参数
        function getQueryParam(name) {
            const params = new URLSearchParams(window.location.search);
            return params.get(name);
        }

        // Base64解码（处理URL安全的Base64编码）
        function base64Decode(encodedStr) {
            // 替换URL安全Base64的特殊字符
            encodedStr = encodedStr.replace(/-/g, '+').replace(/_/g, '/');
            // 补全Base64的填充字符
            const padding = encodedStr.length % 4;
            if (padding) {
                encodedStr += '='.repeat(4 - padding);
            }
            try {
                // 解码为UTF-8字符串
                const decodedBytes = atob(encodedStr);
                return decodeURIComponent(escape(decodedBytes));
            } catch (e) {
                return null;
            }
        }

        // 验证URL合法性（简单校验是否以http/https开头）
        function isValidUrl(url) {
            return /^https?:\/\/.*/i.test(url);
        }

        // 自动跳转
        function autoJump(url) {
            document.getElementById('status').textContent = `即将跳转到以下链接（3秒后自动跳转）：`;
            document.getElementById('decodedUrl').textContent = url;
            document.getElementById('jumpBtn').style.display = 'block';
            
            // 3秒后自动跳转
            setTimeout(() => {
                window.location.href = url;
            }, 3000);
        }

        // 手动跳转按钮
        function manualJump() {
            const url = document.getElementById('decodedUrl').textContent;
            if (url) window.location.href = url;
        }

        // 主流程
        (function() {
            const cParam = getQueryParam('c');
            if (!cParam) {
                document.getElementById('status').textContent = '错误：未找到c参数';
                return;
            }

            const decodedUrl = base64Decode(cParam);
            if (!decodedUrl) {
                document.getElementById('status').textContent = '错误：Base64解码失败';
                return;
            }

            if (!isValidUrl(decodedUrl)) {
                document.getElementById('status').textContent = '错误：解码后的链接不合法（需以http/https开头）';
                document.getElementById('decodedUrl').textContent = decodedUrl;
                return;
            }

            // 解码成功且合法，执行跳转
            autoJump(decodedUrl);
        })();
    </script>
</body>
</html>
